---

name: Release

on: workflow_dispatch

jobs:
  build:
    name: Publish a release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: "Set up Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # We use '--ignore-installed' to avoid GitHub's cache which can cause
          # issues - we have seen packages from this cache cause trouble with
          # pip-extra-reqs.
          python -m pip install --ignore-installed --upgrade --editable .[dev]

      - name: "Calver calculate version"
        uses: StephaneBour/actions-calver@master
        id: calver
        with:
          date_format: "%Y.%m.%d"
          release: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Update changelog"
        uses: jacobtomlinson/gha-find-replace@v3
        env:
          NEXT_VERSION: ${{ steps.calver.outputs.release }}
        with:
          find: "Next\n----"
          replace: "Next\n----\n\n${{ env.NEXT_VERSION }}\n------------"
          include: "CHANGELOG.rst"
          regex: false

      - uses: stefanzweifel/git-auto-commit-action@v4
        id: commit
        with:
          commit_message: Bump CHANGELOG

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.calver.outputs.release }}
          tag_prefix: ""
          commit_sha: ${{ steps.commit.outputs.commit_hash }}

      - name: Checkout the latest tag - the one we just created
        run: |
          git fetch --tags
          git checkout $(git describe --tags $(git rev-list --tags --max-count=1))

      - name: Create Linux binaries
        run: |
          PYTHONPATH=. python admin/release.py

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Build a binary wheel and a source tarball
        run: |
          sudo rm -rf dist/ build/
          python -m build --sdist --wheel --outdir dist/ .

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true

      - name: Create a Homebrew recipe
        id: homebrew-create
        env:
          NEXT_VERSION: ${{ steps.calver.outputs.release }}
          FILENAME: vws-cli.rb
        run: |
          # We have a race condition.
          # In particular, we push to PyPI and then immediately try to install
          # the pushed version.
          # Here, we give PyPI time to propagate the package.
          sleep 120
          pip install vws-cli==${{ env.NEXT_VERSION }}
          poet --formula vws-cli > ${{ env.FILENAME }}
          echo "HOMEBREW_RECIPE_FILE=${{ env.FILENAME }}" >> $GITHUB_OUTPUT

      - name: "Update Homebrew description"
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "desc \"Shiny new formula\""
          replace:  "desc \"CLI for Vuforia Web Services\""
          include: ${{ steps.homebrew-create.outputs.HOMEBREW_RECIPE_FILE }}
          regex: false

      - name: "Fix Homebrew class name"
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "class VWSCLI"
          replace:  "class VwsCli"
          include: ${{ steps.homebrew-create.outputs.HOMEBREW_RECIPE_FILE }}
          regex: false

      - name: Push Homebrew Recipe
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          # See https://github.com/marketplace/actions/github-action-to-push-subdirectories-to-another-repo#usage
          # for how to get this token.
          API_TOKEN_GITHUB: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
        with:
          destination_branch: master
          source_file: ${{ steps.homebrew-create.outputs.HOMEBREW_RECIPE_FILE }}
          destination_repo: 'VWS-Python/homebrew-vws'
          user_email: 'adamdangoor@gmail.com'
          user_name: 'adamtheturtle'
          commit_message: 'Bump VWS CLI Homebrew recipe'
